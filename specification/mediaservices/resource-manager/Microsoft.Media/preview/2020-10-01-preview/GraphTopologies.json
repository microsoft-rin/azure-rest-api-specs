{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Azure Media Services",
    "description": "This Swagger was generated by the API Framework.",
    "version": "2020-10-01-preview"
  },
  "host": "management.azure.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "definitions": {
    "Tags": {
      "properties": {},
      "type": "object"
    },
    "GraphTopologyProperties": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Graph Topology description."
        },
        "activationMode": {
          "type": "string",
          "enum": [
            "Manual",
            "Automatic"
          ],
          "x-ms-enum": {
            "name": "Graph Topology activation mode",
            "values": [
              {
                "value": "Manual",
                "description": "Graph topology must be manually activated/deactivated."
              },
              {
                "value": "Automatic",
                "description": "Graph topology will be automatically activated/deactivated."
              }
            ],
            "modelAsString": true
          },
          "description": "Graph Topology activation mode."
        },
        "state": {
          "type": "string",
          "enum": [
            "Inactive",
            "Active"
          ],
          "x-ms-enum": {
            "name": "Graph Topology state",
            "values": [
              {
                "value": "Inactive",
                "description": "Graph Topology is Inactive."
              },
              {
                "value": "Active",
                "description": "Graph Topology is Active."
              }
            ],
            "modelAsString": true
          },
          "description": "Graph Topology state.",
          "readOnly": true,
          "x-nullable": false
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterDeclaration"
          },
          "description": "Graph Topology parameters."
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceNodeBase"
          },
          "description": "Graph Topology sources."
        },
        "processors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessorNodeBase"
          },
          "description": "Graph Topology processors."
        },
        "sinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SinkNodeBase"
          },
          "description": "Graph Topology sinks."
        }
      },
      "type": "object",
      "required": [
        "activationMode",
        "sources",
        "sinks"
      ],
      "description": "Class for Graph Topology properties."
    },
    "ParameterDeclaration": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter declaration name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Bool",
            "Double",
            "Int",
            "SecretString",
            "String"
          ],
          "x-ms-enum": {
            "name": "Parameter Declaration Type",
            "values": [
              {
                "value": "Bool",
                "description": "Boolean type parameter declaration."
              },
              {
                "value": "Double",
                "description": "Double type parameter declaration."
              },
              {
                "value": "Int",
                "description": "Integer type parameter declaration."
              },
              {
                "value": "SecretString",
                "description": "SecretString type parameter declaration."
              },
              {
                "value": "String",
                "description": "String type parameter declaration."
              }
            ],
            "modelAsString": true
          },
          "description": "Parameter declaration type."
        },
        "description": {
          "type": "string",
          "description": "Parameter declaration description."
        },
        "default": {
          "type": "string",
          "description": "Parameter declaration default value."
        }
      },
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "description": "Graph topology parameter declaration."
    },
    "NodeBase": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "name": {
          "type": "string",
          "description": "Node name."
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "name"
      ],
      "description": "Node base."
    },
    "SourceNodeBase": {
      "discriminator": "@odata.type",
      "x-ms-discriminator-value": "#Microsoft.Media.SourceNodeBase",
      "allOf": [
        {
          "$ref": "#/definitions/NodeBase"
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Source Node base."
    },
    "ProcessorNodeBase": {
      "discriminator": "@odata.type",
      "x-ms-discriminator-value": "#Microsoft.Media.ProcessorNodeBase",
      "allOf": [
        {
          "$ref": "#/definitions/NodeBase"
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeInput"
          },
          "description": "Processor Node inputs."
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "inputs"
      ],
      "description": "Processor Node base."
    },
    "SinkNodeBase": {
      "discriminator": "@odata.type",
      "x-ms-discriminator-value": "#Microsoft.Media.SinkNodeBase",
      "allOf": [
        {
          "$ref": "#/definitions/NodeBase"
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeInput"
          },
          "description": "Sink Node inputs."
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "inputs"
      ],
      "description": "Sink Node base."
    },
    "NodeInput": {
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "Node input name."
        }
      },
      "type": "object",
      "required": [
        "nodeName"
      ],
      "description": "Node input."
    },
    "MediaGraphRtspSource": {
      "x-ms-discriminator-value": "#Microsoft.Media.MediaGraphRtspSource",
      "allOf": [
        {
          "$ref": "#/definitions/SourceNodeBase"
        }
      ],
      "properties": {
        "transport": {
          "type": "string",
          "description": "Underlying RTSP transport. This can be used to enable or disable HTTP tunneling."
        },
        "endpoint": {
          "$ref": "#/definitions/MediaGraphEndpoint",
          "description": "RTSP endpoint of the stream being connected to."
        }
      },
      "type": "object",
      "required": [
        "endpoint"
      ],
      "description": "Rtsp source module."
    },
    "MediaGraphEndpoint": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "credentials": {
          "$ref": "#/definitions/MediaGraphCredentials",
          "description": "Polymorphic credentials to present to the endpoint."
        },
        "url": {
          "type": "string",
          "description": "Url for the endpoint."
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "url"
      ],
      "description": "Base class for endpoints."
    },
    "MediaGraphCredentials": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Credentials to present during authentication."
    },
    "MediaGraphUsernamePasswordCredentials": {
      "x-ms-discriminator-value": "#Microsoft.Media.MediaGraphUsernamePasswordCredentials",
      "allOf": [
        {
          "$ref": "#/definitions/MediaGraphCredentials"
        }
      ],
      "properties": {
        "username": {
          "type": "string",
          "description": "Username for a username/password pair."
        },
        "password": {
          "type": "string",
          "description": "Password for a username/password pair."
        }
      },
      "type": "object",
      "required": [
        "username"
      ],
      "description": "Username/password credential pair."
    },
    "MediaGraphUnsecuredEndpoint": {
      "x-ms-discriminator-value": "#Microsoft.Media.MediaGraphUnsecuredEndpoint",
      "allOf": [
        {
          "$ref": "#/definitions/MediaGraphEndpoint"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "An endpoint to connect to with no encryption in transit."
    },
    "MediaGraphTlsEndpoint": {
      "x-ms-discriminator-value": "#Microsoft.Media.MediaGraphTlsEndpoint",
      "allOf": [
        {
          "$ref": "#/definitions/MediaGraphEndpoint"
        }
      ],
      "properties": {
        "trustedCertificates": {
          "$ref": "#/definitions/MediaGraphCertificateSource",
          "description": "What certificates should be trusted when authenticating a TLS connection. Null designates that Azure Media's source of trust should be used."
        },
        "validationOptions": {
          "$ref": "#/definitions/MediaGraphTlsValidationOptions",
          "description": "Validation options to use when authenticating a TLS connection. By default, strict validation is used."
        }
      },
      "type": "object",
      "description": "An endpoint which must be connected over TLS/SSL."
    },
    "MediaGraphCertificateSource": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for certificate sources."
    },
    "MediaGraphTlsValidationOptions": {
      "properties": {
        "ignoreHostname": {
          "type": "string",
          "description": "Ignore the host name (common name) during validation."
        },
        "ignoreSignature": {
          "type": "string",
          "description": "Ignore the integrity of the certificate chain at the current time."
        }
      },
      "type": "object",
      "description": "Options for controlling the authentication of TLS endpoints."
    },
    "MediaGraphPemCertificateList": {
      "x-ms-discriminator-value": "#Microsoft.Media.MediaGraphPemCertificateList",
      "allOf": [
        {
          "$ref": "#/definitions/MediaGraphCertificateSource"
        }
      ],
      "properties": {
        "certificates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "PEM formatted public certificates, one per entry."
        }
      },
      "type": "object",
      "required": [
        "certificates"
      ],
      "description": "A list of PEM formatted certificates."
    },
    "MediaGraphAssetSink": {
      "x-ms-discriminator-value": "#Microsoft.Media.MediaGraphAssetSink",
      "allOf": [
        {
          "$ref": "#/definitions/SinkNodeBase"
        }
      ],
      "properties": {
        "assetNamePattern": {
          "type": "string",
          "description": "Asset name."
        }
      },
      "type": "object",
      "required": [
        "assetNamePattern"
      ],
      "description": "Asset sink."
    },
    "GraphTopology": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GraphTopologyProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        }
      },
      "type": "object",
      "description": "The Graph Topology."
    },
    "OperationError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "The operation error code."
        },
        "message": {
          "type": "string",
          "description": "The operation error message."
        }
      },
      "type": "object",
      "description": "The operation error."
    },
    "GraphTopologyOperationStatus": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Graph Topology operation."
        },
        "status": {
          "type": "string",
          "description": "The status of the Graph Topology operation."
        },
        "error": {
          "$ref": "#/definitions/OperationError",
          "description": "The error details for the Graph Topology operation."
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "The status of the Graph Topology operation."
    },
    "ODataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "A language-independent error name."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The target of the error (for example, the name of the property in error)."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          },
          "description": "The error details."
        }
      },
      "type": "object",
      "description": "Information about an error."
    },
    "ApiError": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ODataError",
          "description": "The error properties."
        }
      },
      "type": "object",
      "description": "The API error."
    },
    "GraphTopologyCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphTopology"
          },
          "description": "A collection of GraphTopology items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of GraphTopology items."
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/graphTopologies": {
      "get": {
        "summary": "List Graph Topologies",
        "description": "Lists Graph Topologies in the Media Services account.",
        "operationId": "GraphTopologies_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphTopologyCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-examples": {
          "List all Graph Topologies": {
            "$ref": "examples/graph-topology-list-all.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/graphTopologies/{graphTopologyName}": {
      "get": {
        "summary": "Get a Graph Topology",
        "description": "Get the details of a Graph Topology in the Media Services account.",
        "operationId": "GraphTopologies_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphTopology"
            }
          },
          "404": {
            "description": "NotFound"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "graphTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Graph Topology name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Graph Topology by name": {
            "$ref": "examples/graph-topology-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create or update a Graph Topology",
        "description": "Create or update a Graph Topology in the Media Services account.",
        "operationId": "GraphTopologies_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphTopology"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "graphTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Graph Topology name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GraphTopology"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create or update a Graph Topology with an unsecured RTSP source": {
            "$ref": "examples/graph-topology-create-unsecured-source.json"
          },
          "Create or update a Graph Topology with an encrypted RTSP source": {
            "$ref": "examples/graph-topology-create-encrypted-source.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a Graph Topology",
        "description": "Deletes a Graph Topology in the Media Services account.",
        "operationId": "GraphTopologies_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "graphTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Graph Topology name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Graph Topology": {
            "$ref": "examples/graph-topology-delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/graphTopologies/{graphTopologyName}/activate": {
      "post": {
        "summary": "Activate a Graph Topology",
        "description": "Activate a Graph Topology in the Media Services account.",
        "operationId": "GraphTopologies_Activate",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "graphTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Graph Topology name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Activate Graph Topology": {
            "$ref": "examples/graph-topology-activate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/graphTopologies/{graphTopologyName}/deactivate": {
      "post": {
        "summary": "Deactivate a Graph Topology",
        "description": "Deactivate a Graph Topology in the Media Services account.",
        "operationId": "GraphTopologies_Deactivate",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "graphTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Graph Topology name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Deactivate Graph Topology": {
            "$ref": "examples/graph-topology-deactivate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/graphTopologies/{graphTopologyName}/operationsStatus/{operationId}": {
      "get": {
        "summary": "Get the operation status",
        "description": "Get the operation status of a Graph Topology in the media services account.",
        "operationId": "OperationsStatus_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphTopologyOperationStatus"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "graphTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Graph Topology name."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The operation ID."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get the graph topology operation status.": {
            "$ref": "examples/graph-topology-operation-status-get.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier for a Microsoft Azure subscription."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the Azure subscription.",
      "x-ms-parameter-location": "method"
    },
    "MediaServicesAccountName": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Media Services account name.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The Version of the API to be used with the client request."
    }
  }
}
